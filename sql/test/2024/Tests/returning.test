statement ok
create table foo (i int , j int);

statement ok
insert into foo values (1, 10), (2, 20), (3, 30);

query II nosort
delete from foo where i > 1 returning i*2, j*j as k
----
4
400
6
900

query I nosort
select count(*) from foo
----
1

statement ok
truncate foo

statement ok
insert into foo values (1, 10), (2, 20), (3, 30);

query II nosort
update foo set j = -j where i < 3 returning j+5 as bla, i+i
----
-5
2
-15
4

statement ok
truncate foo

statement ok
insert into foo values (1, 10), (2, 20), (3, 30);


query I nosort
update foo set j = -j returning j+5
----
-5
-15
-25

query I nosort
update foo set i = -i returning -j
----
10
20
30

statement error 42000!SELECT: identifier 'k' unknown
update foo set i = -i returning k

statement error 42000!SELECT: identifier 'k' unknown
delete from foo where i > 0 returning k

statement error 42000!SUM: aggregate functions not allowed in SET, WHILE, IF, ELSE, CASE, WHEN, RETURN, ANALYZE, RETURNING clauses (use subquery)
update foo set i = -i returning sum(i)

statement error 42000!SELECT: subquery not allowed
update foo set i = -i returning i in (select j from foo)

statement error 42000!SELECT: identifier 'k' unknown
delete from foo returning k

query I nosort
delete from foo returning i*i
----
1
4
9

statement ok
truncate foo

query I nosort
insert into foo(j,i) values (1,10), (-1,-10) returning j as bla
----
1
-1

query I nosort
insert into foo values (1,10), (-1,-10) returning i+2*j
----
21
-21


query I nosort
insert into foo(j) values (10), (-10) returning i IS NOT DISTINCT FROM NULL
----
1
1

query I nosort
select count(*) from foo
----
6


statement error 42000!SELECT: identifier 'k' unknown
insert into foo values (1,10), (-1,-10) returning k


statement ok
truncate foo

statement ok
create function read_dump_rel(rel STRING) RETURNS STRING external name sql.read_dump_rel


query T nosort
select read_dump_rel(
'REF 1 (2)
table("sys"."foo")[ "foo"."i", "foo"."j", "foo"."%TID%" ]
update(
& REF 1 
project (
select (
& REF 1 
) [ ("foo"."i") < (int(31) "3") ]
) [ "foo"."%TID%" NOT NULL UNIQUE, "sys"."sql_neg"("foo"."j" NOT NULL) NOT NULL as "foo"."j" ]
) [ "foo"."%TID%" NOT NULL UNIQUE, "foo"."j" NOT NULL ] [ "sys"."sql_add"("foo"."j" NOT NULL, int(3) "5") NOT NULL as "bla", "sys"."sql_add"("foo"."i", "foo"."i") ]')
----
@ REF 1 (2)@table("sys"."foo") [ "foo"."i" NOT NULL UNIQUE, "foo"."j" NOT NULL UNIQUE, "foo"."%TID%" NOT NULL UNIQUE ]@update(@& REF 1 @project (@select (@& REF 1 @) [ ("foo"."i" NOT NULL UNIQUE) < (int(31) "3") ]@) [ "foo"."%TID%" NOT NULL UNIQUE, "sys"."sql_neg"("foo"."j" NOT NULL UNIQUE) NOT NULL as "foo"."j" ]@) [ "foo"."i" NOT NULL UNIQUE, "foo"."j" NOT NULL UNIQUE, "foo"."%TID%" NOT NULL UNIQUE ] [ "sys"."sql_add"("foo"."j" NOT NULL UNIQUE, int(3) "5") NOT NULL as "bla", "sys"."sql_add"("foo"."i" NOT NULL UNIQUE, "foo"."i" NOT NULL UNIQUE) NOT NULL ]

query T nosort
select read_dump_rel(
'REF 1 (2)
table("sys"."foo") [ "foo"."i" NUNIQUES 5.000000, "foo"."j" NOT NULL MIN "-10" MAX "10" NUNIQUES 4.000000, "foo"."%TID%" NOT NULL UNIQUE ] COUNT 22
delete(
& REF 1 
project (
select (
& REF 1 
) [ ("foo"."i" NUNIQUES 5.000000) > (int(31) "0") ] COUNT 22
) [ "foo"."%TID%" NOT NULL UNIQUE ] COUNT 22
) [ "foo"."j" NOT NULL MIN "-10" MAX "10" NUNIQUES 4.000000 ]')
----
@ REF 1 (2)@table("sys"."foo") [ "foo"."i" NOT NULL UNIQUE, "foo"."j" NOT NULL UNIQUE, "foo"."%TID%" NOT NULL UNIQUE ]@delete(@& REF 1 @project (@select (@& REF 1 @) [ ("foo"."i" NOT NULL UNIQUE) > (int(31) "0") ]@) [ "foo"."%TID%" NOT NULL UNIQUE ]@) [ "foo"."j" NOT NULL UNIQUE ]


query T nosort
select read_dump_rel(
'insert(
table("sys"."foo") [ "foo"."i" NUNIQUES 5.000000, "foo"."j" NOT NULL MIN "-10" MAX "10" NUNIQUES 4.000000, "foo"."%TID%" NOT NULL UNIQUE ] COUNT 22
[  [ int(31) NULL, int(31) NULL ] as "%4"."%4",  [ int(31) "10", int(31)["sys"."sql_neg"(tinyint(4) "10") NOT NULL] NOT NULL ] as "%1"."%1" ]
) [ "foo"."i" NUNIQUES 5.000000 ]')
----
@insert(@table("sys"."foo") [ "foo"."i" NOT NULL UNIQUE, "foo"."j" NOT NULL UNIQUE, "foo"."%TID%" NOT NULL UNIQUE ]@ [  [ int(31) NULL, int(31) NULL ] as "%4"."%4",  [ int(31) "10", int(31)["sys"."sql_neg"(tinyint(4) "10") NOT NULL] NOT NULL ] as "%1"."%1" ]@) [ "foo"."i" NOT NULL UNIQUE ]
